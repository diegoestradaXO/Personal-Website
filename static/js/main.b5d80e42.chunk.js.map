{"version":3,"sources":["logo.svg","present.jpg","page1.js","page2.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Name","className","style","styles","intro","class","content","viewBox","svg","id","text-anchor","x","y","dy","text","xlinkHref","Social","href","target","NavBar","container","logo","Page1","data-ca3_iconfont","data-ca3_icon","Self","PersonalCard","width","src","present","download","type","buttonStyle","Page2","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6HAAAA,EAAOC,QAAU,IAA0B,kC,iBCA3CD,EAAOC,QAAU,IAA0B,qC,qMCK3C,SAASC,IACP,OACE,yBAAKC,UAAU,QAAQC,MAAOC,IAAOC,OACnC,yBAAKH,UAAU,UAAf,cACA,yBAAKI,MAAM,UAAUH,MAAOC,IAAOG,SACjC,yBAAKC,QAAQ,cAAcL,MAAOC,IAAOK,KACzC,4BAAQC,GAAG,UACP,0BAAMC,cAAY,SAASC,EAAE,MAAMC,EAAE,MAAMC,GAAG,QAAQX,MAAOC,IAAOW,MAApE,UAIF,yBAAKC,UAAU,UAAUV,MAAM,SAC/B,yBAAKU,UAAU,UAAUV,MAAM,SAC/B,yBAAKU,UAAU,UAAUV,MAAM,SAC/B,yBAAKU,UAAU,UAAUV,MAAM,SAC/B,yBAAKU,UAAU,UAAUV,MAAM,WAGnC,yBAAKJ,UAAU,eAAf,gCAIN,SAASe,IACP,OACE,yBAAKX,MAAM,iBACT,uBAAGY,KAAK,oCAAoCC,OAAO,SAASb,MAAM,cAChE,uBAAGA,MAAM,mBAEX,uBAAGY,KAAK,yCAAyCC,OAAO,SAASb,MAAM,iBACrE,uBAAGA,MAAM,sBAEX,uBAAGY,KAAK,uDAAuDC,OAAO,SAASb,MAAM,gBACnF,uBAAGA,MAAM,yBAKjB,SAASc,IACP,OACI,yBAAKd,MAAM,YAAYH,MAAOC,IAAOiB,WACnC,yBAAKf,MAAM,OAAOH,MAAOC,IAAOkB,MAC9B,2CAgBKC,MAVf,WACI,OACA,yBAAKjB,MAAM,SACT,kBAACc,EAAD,MACA,kBAACnB,EAAD,MACA,kBAACgB,EAAD,MACA,uBAAGX,MAAM,6CAA6CkB,oBAAkB,YAAYC,gBAAc,GAAGP,KAAK,c,wCClDhH,SAASQ,IACL,OACI,yBAAKpB,MAAM,kBACP,wBAAIA,MAAM,YAAV,cAKZ,SAASqB,IACL,OACI,yBAAKrB,MAAM,0BAA0BsB,MAAM,SACvC,yBAAKtB,MAAM,yBACP,yBAAKuB,IAAKC,IAASxB,MAAM,iBAE7B,yBAAKA,MAAM,gBACP,mEACA,mQAE4E,uBAAGY,KAAK,oCAAoCC,OAAO,SAASjB,UAAW,SAAvE,sBACxE,6BACA,6BAJJ,yEAKwE,6BALxE,6HASA,yBAAKI,MAAM,UACP,uBAAGY,KAAK,uBAAuBa,SAAS,iBACxC,4BAAQzB,MAAM,SAAS0B,KAAK,SAAS7B,MAAO8B,KAA5C,kBAiBLC,MATf,WACI,OACA,yBAAK5B,MAAM,SACT,kBAACoB,EAAD,MACA,kBAACC,EAAD,MACA,yBAAKjB,GAAG,aClCCyB,MATf,WAEE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b5d80e42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/present.82bdc409.jpg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport styles from './styles/page1.css'\r\n\r\nfunction Name(){\r\n  return(\r\n    <div className='intro' style={styles.intro}>\r\n      <div className='myname'>My name is</div>\r\n      <div class='content' style={styles.content}>\r\n        <svg viewBox=\"0 0 600 170\" style={styles.svg}>\r\n        <symbol id=\"s-text\">\r\n            <text text-anchor=\"middle\" x=\"50%\" y=\"50%\" dy=\".35em\" style={styles.text}>\r\n              Diego\r\n            </text> \r\n          </symbol>\r\n          <use xlinkHref='#s-text' class='text' />\r\n          <use xlinkHref='#s-text' class='text' />\r\n          <use xlinkHref='#s-text' class='text' />\r\n          <use xlinkHref='#s-text' class='text' />\r\n          <use xlinkHref='#s-text' class='text' />\r\n        </svg>\r\n      </div>\r\n      <div className='description'>And Im a frontend developer</div>\r\n    </div>\r\n  )\r\n}\r\nfunction Social(){\r\n  return(\r\n    <div class=\"sleek__social\">\r\n      <a href=\"https://github.com/diegoestradaXO\" target='_blank' class=\"btn github\">\r\n        <i class=\"fab fa-github\"></i>\r\n      </a>\r\n      <a href=\"https://www.instagram.com/diegxestrada\" target='_blank' class=\"btn instagram\">\r\n        <i class=\"fab fa-instagram\"></i>\r\n      </a>\r\n      <a href=\"https://www.linkedin.com/in/diego-estrada-79340b157/\" target='_blank' class=\"btn linkedin\">\r\n        <i class=\"fab fa-linkedin-in\"></i>\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\nfunction NavBar(){\r\n  return(\r\n      <nav class='container' style={styles.container}>\r\n        <div class='logo' style={styles.logo}>\r\n          <h4>Portfolio</h4>\r\n        </div>\r\n      </nav>\r\n  )\r\n}\r\n\r\nfunction Page1(){\r\n    return(\r\n    <div class='page1'>\r\n      <NavBar/>\r\n      <Name/>\r\n      <Social/>\r\n      <a class=\"ca3-scroll-down-link ca3-scroll-down-arrow\" data-ca3_iconfont=\"ETmodules\" data-ca3_icon=\"\" href='#finish'></a>\r\n    </div>\r\n    )\r\n}\r\nexport default Page1;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport present from './present.jpg'\r\nimport styles from './styles/page2.css'\r\nimport buttonStyle from './styles/button.css'\r\n\r\n\r\nfunction Self(){\r\n    return(\r\n        <div class='self-container'>\r\n            <h1 class='who-am-i'>Who am i?</h1>\r\n        </div>\r\n        \r\n    )\r\n}\r\nfunction PersonalCard(){\r\n    return(\r\n        <div class='personal-card-container' width='100px'>\r\n            <div class='present-img-container'>\r\n                <img src={present} class='present-img'></img>\r\n            </div>\r\n            <div class='present-text'>\r\n                <h1>Hi!âœ‹ My name is Diego Estrada!</h1>\r\n                <p>I'm currently studying Computer Science at Universidad del Valle\r\n                    de Guatemala. I love cars ðŸš—, videogames ðŸŽ®, RnB music ðŸŽ§ and\r\n                    CSS tricks. I enjoy learning and also sharing my creations to the world <a href='https://codepen.io/diegoestradaXO' target='_blank' className ='visit'>(go to my Codepen)</a>\r\n                    <br/>\r\n                    <br/>\r\n                    I'd love it if you reached out to me. Even if it's just to say \"Hi!\"<br/>\r\n                    Who knows, maybe we could just chat about movies and TV Shows, or it could be you \r\n                    sharing design ideas for me to develop.\r\n                </p>\r\n                <div class=\"center\">\r\n                    <a href=\"diego_estrada_cv.pdf\" download=\"hire_this_guy\"> \r\n                    <button class=\"button\" type=\"submit\" style={buttonStyle}>Get my CV!</button>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Page2(){\r\n    return(\r\n    <div class='page2'>\r\n      <Self/>\r\n      <PersonalCard/>\r\n      <div id='finish'></div>\r\n    </div>\r\n    )\r\n}\r\nexport default Page2;","import React from 'react';\nimport './App.css';\nimport Page1 from './page1.js'\nimport Page2 from './page2.js'\n\nfunction App() {\n  //navSlide()\n  return (\n    <div>\n      <Page1/>\n      <Page2/>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}